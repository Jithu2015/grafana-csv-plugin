{"version":3,"sources":["../src/module.js"],"names":["CsvDatasource","DatasourceQueryCtrl","DatasourceConfigCtrl","$scope","backendSrv","init","oldDeleteMethod","delete","paramaters","datasourceRequest","url","method","data","queries","datasourceId","current","id","refId","query","name","then","res","catch","err","$on","accessModes","text","value","columnTypes","jsonData","encrypt","accessMode","filename","csvDelimiter","csvComment","csvTrimLeadingSpace","sftpHost","sftpPort","sftpUser","sftpIgnoreHostKey","sftpWorkingDir","columns","secureJsonData","sftpPassword","onPasswordReset","event","preventDefault","secureJsonFields","onPasswordChange","currentTarget","evt","push","type","rowIndex","splice","templateUrl","FileAnnotationsQueryCtrl"],"mappings":"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","file":"module.js","sourcesContent":["import CsvDatasource from './datasource';\nimport DatasourceQueryCtrl from './query_ctrl';\n\nclass DatasourceConfigCtrl {\n  constructor($scope, backendSrv) {\n    this.init();\n\n    backendSrv.oldDeleteMethod = backendSrv.delete;\n    backendSrv.delete = (paramaters) => {\n\n      backendSrv.datasourceRequest({\n        url: '/api/tsdb/query',\n        method: 'POST',\n        data: {\n          queries: [{\n            datasourceId: this.current.id,\n            refId: '[delete-ds]',\n            query: this.current.name,\n          }]\n        }\n      }).then((res) => {\n        backendSrv.oldDeleteMethod(paramaters);\n      })\n        .catch((err) => {\n          backendSrv.oldDeleteMethod(paramaters);\n        });\n    };\n\n    $scope.$on('$destroy', () => {\n      backendSrv.delete = backendSrv.oldDeleteMethod;\n      delete backendSrv.oldDeleteMethod;\n    });\n  }\n\n  init() {\n    this.accessModes = [\n      { text: 'Local', value: 'local' },\n      { text: 'SFTP', value: 'sftp' },\n    ];\n\n    this.columnTypes = [\n      { text: 'Text', value: 'text' },\n      { text: 'Integer', value: 'integer' },\n      { text: 'Real', value: 'real' },\n      { text: 'Timestamp', value: 'timestamp' },\n      { text: 'Date', value: 'date' },\n    ];\n\n    this.current.jsonData.encrypt = 'true';\n    this.current.jsonData.accessMode = this.current.jsonData.accessMode || 'local';\n    this.current.jsonData.filename = this.current.jsonData.filename || '';\n    this.current.jsonData.csvDelimiter = this.current.jsonData.csvDelimiter || '';\n    this.current.jsonData.csvComment = this.current.jsonData.csvComment || '';\n    this.current.jsonData.csvTrimLeadingSpace = this.current.jsonData.csvTrimLeadingSpace || true;\n    this.current.jsonData.sftpHost = this.current.jsonData.sftpHost || '';\n    this.current.jsonData.sftpPort = this.current.jsonData.sftpPort || '';\n    this.current.jsonData.sftpUser = this.current.jsonData.sftpUser || '';\n    this.current.jsonData.sftpIgnoreHostKey = this.current.jsonData.sftpIgnoreHostKey || false;\n    this.current.jsonData.sftpWorkingDir = this.current.jsonData.sftpWorkingDir || '';\n    this.current.jsonData.columns = this.current.jsonData.columns || [];\n\n    this.current.secureJsonData = this.current.secureJsonData || {};\n    this.current.secureJsonData.sftpPassword = this.current.secureJsonData.sftpPassword || null;\n\n    this.onPasswordReset = (event) => {\n      event.preventDefault();\n      this.current['sftpPassword'] = null;\n      this.current.secureJsonFields['sftpPassword'] = false;\n      this.current.secureJsonData = this.current.secureJsonData || {};\n      this.current.secureJsonData['sftpPassword'] = '';\n    };\n\n    this.onPasswordChange = (event) => {\n      this.current.secureJsonData =  this.current.secureJsonData || {};\n      this.current.secureJsonData['sftpPassword'] = event.currentTarget.value;\n    };\n  }\n\n  onFilenameUpdate() {\n    this.current.url = this.current.jsonData.filename;\n  }\n\n  onSftpHostUpdate() {\n    this.current.url = this.current.jsonData.sftpHost + '>' + this.current.jsonData.filename;\n  }\n\n  addColumn(evt) {\n    evt.preventDefault();\n    this.current.jsonData.columns.push({\n      name: '',\n      type: 'text',\n    });\n  }\n\n  deleteColumn(rowIndex) {\n    this.current.jsonData.columns.splice(rowIndex, 1);\n  }\n}\nDatasourceConfigCtrl.templateUrl = 'partials/config.html';\n\nclass FileAnnotationsQueryCtrl {\n  constructor() {\n  }\n}\n\nexport {\n  CsvDatasource as Datasource,\n  DatasourceQueryCtrl as QueryCtrl,\n  DatasourceConfigCtrl as ConfigCtrl,\n  FileAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n"]}